
pipeline {

  environment {
    registry = "ltdungc50/demo_cd"
    registryCredential = "dockerhub_id"
    dockerImage = ""
    BUILD_NUMBER= "latest"
  }

  agent { label 'jenkins-linux' }

  stages {
    stage('Building our image') {
        steps{
            script {
                dockerImage = docker.build registry + ":$BUILD_NUMBER"
            }
        }
    }
    stage('Deploy our image') {
        steps{
            script {
                    docker.withRegistry( '', registryCredential ) {
                    dockerImage.push()
                }
            }
        }
    }
    
    stage('Run Deploy & Clean up'){
        parallel {
            stage('Cleaning up') {
                steps{
                    script {
                    sh "docker rmi $registry:$BUILD_NUMBER"
                    }
                }
            }
            stage('Deploy App') {
                steps{
                    script {
                        withCredentials([string(credentialsId: "jenkins-argocd-deploy", variable: 'ARGOCD_AUTH_TOKEN')]) {
                            sh "
                                ARGOCD_SERVER="argocd-repo-server.argocd.svc"
                                APP_NAME="sample-cicd"
                                CONTAINER="k8s-debian-test"
                                
                                # Deploy to ArgoCD
                                ARGOCD_SERVER=$ARGOCD_SERVER argocd --grpc-web app sync $APP_NAME --force
                                ARGOCD_SERVER=$ARGOCD_SERVER argocd --grpc-web app wait $APP_NAME --timeout 600
                            "
                        }
                    }
                }
            }  
        }
    }    
  }
}
